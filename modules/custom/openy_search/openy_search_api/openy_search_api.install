<?php

/**
 * @file
 * Module installation file.
 */

use Drupal\Core\Url;
use Drupal\node\NodeInterface;

/**
 * Implements hook_install().
 */
function openy_search_api_install() {
  // Create search results page for default search api.
  $entity_type_manager = Drupal::entityTypeManager();
  $paragraph_storage = $entity_type_manager->getStorage('paragraph');
  $node_storage = $entity_type_manager->getStorage('node');

  $search_paragraph = $paragraph_storage->create([
    'type' => 'search_api',
  ]);
  if (!$search_paragraph->save()) {
    return;
  }

  $page = $node_storage->create([
    'type' => 'landing_page',
    'title' => 'Search',
    'field_lp_layout' => 'one_column',
    'langcode' => 'en',
    'uid' => '1',
    'field_content' => [
      [
        'target_id' => $search_paragraph->id(),
        'target_revision_id' => $search_paragraph->getRevisionId(),
      ],
    ],
    'status' => NodeInterface::PUBLISHED,
  ]);
  if ($page->save()) {
    Drupal::configFactory()
      ->getEditable('openy_search_api.settings')
      ->set('search_page_id', $page->id())
      ->save();
  }

  // Display message if Open Y installed.
  if (\Drupal::moduleHandler()->moduleExists('openy_system')) {
    $url = Url::fromRoute('search_api.overview');
    $args = [
      ':search_api_overview' => $url->toString(),
    ];
    $messenger = \Drupal::messenger();
    $messenger->addMessage(
      t('Please check your search_api <a href=":search_api_overview">search settings page</a>', $args),
      'status'
    );
  }
}

/**
 * Implements hook_uninstall().
 */
function openy_search_api_uninstall() {
  if ($nid = Drupal::configFactory()
    ->get('openy_search_api.settings')
    ->get('search_page_id')) {
    $node_storage = Drupal::entityTypeManager()->getStorage('node');
    if ($node = $node_storage->load($nid)) {
      $node->delete();
    }
  }
}
